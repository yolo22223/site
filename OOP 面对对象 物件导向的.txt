OOP 面对对象 物件导向的
literal 
var 概念={id:"abc";age:1,}
var student = { id:"d100570";

a = object create(concrete)

function Student(i,n,a)
{
this.id = i; //attribute 特性
this.method  = function(){}
...
}

let s = new student("D100205");
     b = new student(".......");

student.prototype.methodz= function()
<style>
@keyframes fly
{
from {height:700px} 
to{height:0px}
}
</style>
<script>
function Balloon( color1, diameter , speed )
{
this.color = color1;
this.diameter = diameter ;
this. speed = speed;
this. make = fucntion()
{
let dv = document . createElement(“div”)
dv .id = 'b' + this. id ;
dv. style.cssText = "width:' + this.diameter + ' px; height' + this.diameter +'px;border-radius:' + (diameter/2) + 'px;
background-color:' + this.color +' ; position:absolute;left:' + (id*50)+ 'px; top:700px';
document.body.appendChild(dv);
}
this.rise = function()
{
let dv = document.getElementById( ' d' + this.id );
dv.style.animationName = "fly" ; 
dv.style.animationDuration = ~~(700/this.speed) + 's' ;
}
}
let b = new Balloon (1, 'red' , 200 , 100);
b.make();
b.rise();
</script>;